version: '3.8'

services:
  aaire:
    build: .
    container_name: aaire-app
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      - QDRANT_URL=${QDRANT_URL:-http://qdrant:6333}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://aaire:aaire_password@postgres:5432/aaire_db
    volumes:
      - ./data/uploads:/app/data/uploads
      - ./logs:/app/logs
    depends_on:
      - redis
      - postgres
      - qdrant
    restart: unless-stopped
    networks:
      - aaire-network

  redis:
    image: redis:7-alpine
    container_name: aaire-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - aaire-network

  postgres:
    image: postgres:15-alpine
    container_name: aaire-postgres
    environment:
      - POSTGRES_USER=aaire
      - POSTGRES_PASSWORD=aaire_password
      - POSTGRES_DB=aaire_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - aaire-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: aaire-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - aaire-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: aaire-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - aaire
    restart: unless-stopped
    networks:
      - aaire-network
    profiles:
      - production

volumes:
  redis-data:
  postgres-data:
  qdrant-data:

networks:
  aaire-network:
    driver: bridge